/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define U_MOUSE_MOVE_MAX 1200

#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT

#define MOVE_UP MOVE_VERT(-U_MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_VERT(U_MOUSE_MOVE_MAX)
#define MOVE_LEFT MOVE_HOR(-U_MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_HOR(U_MOUSE_MOVE_MAX)

&mmv {
    time-to-max-speed-ms = <300>;
};

/ {
    behaviors {
    };

    macros {
        r_colon: r_colon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp COLON>;
            label = "R_COLON";
        };
        r_parent: r_parent {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR>;
            label = "R_PARENT";
        };
        r_curly: r_curly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LBRC) &kp RBRC &kp LEFT &kp ENTER>;
            label = "R_CURLY";
        };
        r_bracket: r_bracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBKT &kp RBKT>;
            label = "R_BRACKET";
        };
        r_generic: r_generic {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp GT &kp LEFT>;
            label = "R_GENERIC";
        };
        r_pipe: r_pipe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PIPE &kp PIPE>;
            label = "R_PIPE";
        };
        r_return: r_return {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT>;
            label = "R_RETURN";
        };
        r_match: r_match {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
            label = "R_MATCH";
        };
        r_less: r_less {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp EQUAL>;
            label = "R_LESS";
        };
        r_great: r_great {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GT &kp EQUAL>;
            label = "R_GREAT";
        };
        r_duobacktic: r_duobacktic {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp GRAVE>;
            label = "R_DUOBACKTIC";
        };
        r_tribacktic: r_tribacktic {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp GRAVE &kp GRAVE>;
            label = "R_TRIBACKTIC";
        };
        r_str: r_str {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DQT &kp DQT>;
            label = "R_STR";
        };
        r_typea: r_typea {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp UNDER &kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp UNDER &kp LEFT &kp LEFT &kp LEFT>;
            label = "R_TYPEA";
        };
        rr_str: rr_str {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DQT &kp DQT &kp LEFT>;
            label = "RR_STR";
        };
        rr_duobacktic: rr_duobacktic {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp LEFT &kp LEFT>;
            label = "RR_DUOBACKTIC";
        };
        md_bold: md_bold {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ASTRK &kp ASTRK &kp ASTRK &kp ASTRK &kp LEFT &kp LEFT>;
            label = "MD_BOLD";
        };
        md_ita: md_ita {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp UNDER &kp UNDER &kp LEFT>;
            label = "MD_ITA";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        dvorak_layer {
            bindings = <
&none  &kp SEMI            &kp COMMA  &kp DOT    &kp P      &kp Y          &kp F       &kp G      &kp C          &kp R  &kp L             &none
&none  &kp A               &kp O      &kp E      &lt 5 U    &kp I          &kp D       &kp H      &kp T          &kp N  &kp S             &none
&none  &mt LEFT_SHIFT SQT  &kp Q      &lt 2 J    &lt 7 K    &kp X          &kp B       &kp M      &lt 3 W        &kp V  &mt LEFT_SHIFT Z  &none
                                      &lt 4 ESC  &lt 4 TAB  &lt 6 SPACE    &lt 1 CAPS  &kp ENTER  &kp BACKSPACE
            >;
        };

        bt_layer {
            bindings = <
&none  &none         &none         &none         &none         &none           &none  &kp F9  &kp F10  &kp F11  &kp F12  &none
&none  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0    &none  &kp F5  &kp F6   &kp F7   &kp F8   &none
&none  &none         &none         &none         &kp B         &none           &none  &kp F1  &kp F2   &kp F3   &kp F4   &none
                                   &none         &none         &bt BT_CLR      &none  &none   &none
            >;
        };

        helper_left_layer {
            bindings = <
&none  &trans          &trans     &trans  &trans    &trans          &trans  &trans  &trans  &trans  &trans  &none
&none  &trans          &trans     &trans  &trans    &trans          &trans  &trans  &trans  &trans  &trans  &none
&none  &kp LEFT_SHIFT  &kp LCTRL  &none   &kp LGUI  &kp LEFT_ALT    &trans  &trans  &trans  &trans  &trans  &none
                                  &none   &trans    &none           &none   &none   &none
            >;
        };

        helper_right_layer {
            bindings = <
&none  &trans  &trans  &trans  &trans  &trans    &trans         &trans         &trans  &trans     &trans           &none
&none  &trans  &trans  &trans  &trans  &trans    &trans         &trans         &trans  &trans     &trans           &none
&none  &trans  &trans  &trans  &trans  &trans    &kp RIGHT_ALT  &kp RIGHT_GUI  &none   &kp RCTRL  &kp RIGHT_SHIFT  &none
                       &none   &trans  &none     &none          &none          &none
            >;
        };

        shortcut_symright_layer {
            bindings = <
&none  &none  &none  &none  &none  &none    &none     &kp LEFT_BRACE  &kp RIGHT_BRACE  &none     &none      &none
&none  &none  &none  &none  &none  &none    &kp EXCL  &kp UNDERSCORE  &kp SLASH        &kp HASH  &kp COLON  &none
&none  &none  &none  &none  &none  &none    &none     &kp NUMBER_0    &kp DLLR         &none     &none      &none
                     &none  &none  &none    &none     &none           &trans
            >;
        };

        num_layer {
            bindings = <
&none  &none      &kp PIPE   &kp BSLH  &none   &none     &kp PRCNT     &kp N7   &kp N8  &kp N9  &kp SLASH  &none
&none  &kp TILDE  &kp GRAVE  &kp AT    &none   &none     &kp ASTERISK  &kp N4   &kp N5  &kp N6  &kp MINUS  &none
&none  &none      &none      &none     &none   &none     &kp PLUS      &kp N1   &kp N2  &kp N3  &kp N0     &none
                             &trans    &trans  &trans    &none         &kp DOT  &trans
            >;
        };

        control_layer {
            bindings = <
&none  &none           &none           &none         &none            &none    &none       &mkp LCLK     &mkp RCLK          &none      &none      &none
&none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &none    &none       &kp LEFT      &kp UP             &kp DOWN   &kp RIGHT  &none
&none  &none           &none           &kp LCTRL     &kp LGUI         &none    &none       &kp HOME      &kp PG_UP          &kp PG_DN  &kp END    &none
                                       &none         &none            &none    &kp K_MUTE  &kp C_VOL_UP  &kp C_VOLUME_DOWN
            >;
        };

        rust_layer {
            bindings = <
&none  &r_str   &r_duobacktic  &r_tribacktic   &none  &none    &kp HASH  &r_parent  &r_curly   &r_bracket  &r_generic  &none
&none  &md_ita  &md_bold       &r_tribacktic   &none  &none    &r_pipe   &kp EQUAL  &r_return  &kp ASTRK   &kp AMPS    &none
&none  &rr_str  &r_typea       &rr_duobacktic  &none  &none    &kp EXCL  &r_colon   &r_match   &none       &rr_str     &none
                               &none           &none  &none    &none     &none      &trans
            >;
        };
    };
};
