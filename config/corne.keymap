/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    macros {
        r_colon: r_colon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp COLON>;
            label = "R_COLON";
        };

        r_parent: r_parent {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR>;
            label = "R_PARENT";
        };

        r_curly: r_curly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LBRC) &kp RBRC &kp LEFT &kp ENTER>;
            label = "R_CURLY";
        };

        r_bracket: r_bracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBKT &kp RBKT>;
            label = "R_BRACKET";
        };

        r_generic: r_generic {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp GT &kp LEFT>;
            label = "R_GENERIC";
        };

        r_pipe: r_pipe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PIPE &kp PIPE>;
            label = "R_PIPE";
        };

        r_return: r_return {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT>;
            label = "R_RETURN";
        };

        r_match: r_match {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
            label = "R_MATCH";
        };

        r_less: r_less {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp EQUAL>;
            label = "R_LESS";
        };

        r_great: r_great {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GT &kp EQUAL>;
            label = "R_GREAT";
        };

        r_duobacktic: r_duobacktic {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp GRAVE>;
            label = "R_DUOBACKTIC";
        };

        r_tribacktic: r_tribacktic {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp GRAVE &kp GRAVE>;
            label = "R_TRIBACKTIC";
        };

        r_str: r_str {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DQT &kp DQT>;
            label = "R_STR";
        };

        rr_type: rr_type {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp UNDER &kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp UNDER &kp LEFT &kp LEFT &kp LEFT>;
            label = "RR_TYPE";
        };

        rr_str: rr_str {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DQT &kp DQT &kp LEFT>;
            label = "RR_STR";
        };

        rr_duobacktic: rr_duobacktic {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp LEFT &kp LEFT>;
            label = "RR_DUOBACKTIC";
        };

        md_bold: md_bold {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ASTRK &kp ASTRK &kp ASTRK &kp ASTRK &kp LEFT &kp LEFT>;
            label = "MD_BOLD";
        };

        md_ita: md_ita {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp UNDER &kp UNDER &kp LEFT>;
            label = "MD_ITA";
        };

        rrp_doubacktic: rrp_doubacktic {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT &kp X &kp I &kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp LEFT &kp LEFT &kp LEFT &kp ESC &kp P>;
            label = "RRP_DOUBACKTIC";
        };

        rrp_type: rrp_type {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT &kp X &kp I &kp UNDER &kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp UNDER &kp LEFT &kp LEFT &kp LEFT &kp LEFT &kp ESC &kp P>;
            label = "RRP_TYPE";
        };

        rr_tripbacktic: rr_tripbacktic {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp LEFT &kp LEFT &kp LEFT>;
            label = "RR_TRIPBACKTIC";
        };

        mdp_bold: mdp_bold {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT &kp X &kp I &kp ASTRK &kp ASTRK &kp ASTRK &kp ASTRK &kp LEFT &kp LEFT &kp LEFT &kp ESC &kp P>;
            label = "MDP_BOLD";
        };

        mdp_ita: mdp_ita {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT &kp X &kp I &kp UNDER &kp UNDER &kp LEFT &kp LEFT &kp ESC &kp P>;
            label = "MDP_ITA";
        };

        r_cur: r_cur {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LBRC) &kp RBRC &kp LEFT>;
            label = "R_CUR";
        };

        u2500: u2500 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RS(RC(U)) &kp NUMBER_2 &kp N5 &kp N0 &kp N0 &kp SPACE>;
            label = "U2500";
        };
    };

    behaviors {
        esc_tog_control_layer: esc_tog_control_layer {
            compatible = "zmk,behavior-tap-dance";
            label = "ESC_TOG_CONTROL_LAYER";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&tog 6>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        dvorak_layer {
            bindings = <
&none  &kp SEMI            &kp COMMA  &lt 5 DOT               &lt 6 P  &kp Y          &kp F       &kp G      &lt 6 C        &kp R    &kp L             &none
&none  &kp A               &kp O      &kp E                   &kp U    &kp I          &kp D       &kp H      &kp T          &kp N    &kp S             &none
&none  &mt LEFT_SHIFT SQT  &lt 5 Q    &lt 2 J                 &lt 7 K  &kp X          &kp B       &lt 4 M    &lt 3 W        &lt 7 V  &mt LEFT_SHIFT Z  &none
                                      &esc_tog_control_layer  &kp TAB  &lt 6 SPACE    &lt 1 CAPS  &kp ENTER  &kp BACKSPACE
            >;
        };

        bt_layer {
            bindings = <
&none  &none           &none         &none         &bt BT_CLR    &none           &none  &kp F9  &kp F10  &kp F11  &kp F12  &none
&none  &bt BT_SEL 4    &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0    &none  &kp F5  &kp F6   &kp F7   &kp F8   &none
&none  &kp LEFT_SHIFT  &kp LCTRL     &none         &kp LGUI      &kp LALT        &none  &kp F1  &kp F2   &kp F3   &kp F4   &none
                                     &none         &none         &kp DELETE      &none  &none   &none
            >;
        };

        helper_left_layer {
            bindings = <
&none  &trans          &trans     &trans  &trans    &trans          &trans  &trans    &trans     &trans  &trans  &none
&none  &trans          &trans     &trans  &trans    &trans          &trans  &trans    &trans     &trans  &trans  &none
&none  &kp LEFT_SHIFT  &kp LCTRL  &none   &kp LGUI  &kp LEFT_ALT    &trans  &trans    &trans     &trans  &trans  &none
                                  &none   &trans    &kp DELETE      &none   &kp PLUS  &kp MINUS
            >;
        };

        helper_right_layer {
            bindings = <
&none  &trans  &trans  &trans  &trans  &trans        &trans         &trans         &trans  &trans     &trans           &none
&none  &trans  &trans  &trans  &trans  &trans        &trans         &trans         &trans  &trans     &trans           &none
&none  &trans  &trans  &trans  &trans  &trans        &kp RIGHT_ALT  &kp RIGHT_GUI  &none   &kp RCTRL  &kp RIGHT_SHIFT  &none
                       &none   &none   &kp DELETE    &none          &none          &none
            >;
        };

        symbol_layer {
            bindings = <
&none  &kp POUND      &kp CARET  &kp LBRC   &kp RBRC  &kp PIPE         &none  &none  &none  &none  &none   &none
&none  &kp AMPERSAND  &kp STAR   &kp MINUS  &kp FSLH  &kp BACKSLASH    &none  &none  &none  &none  &kp AT  &none
&none  &kp DLLR       &kp QMARK  &kp LPAR   &kp RPAR  &kp GRAVE        &none  &none  &none  &none  &kp N0  &none
                                 &kp LBKT   &kp RBKT  &kp TILDE        &none  &none  &none
            >;
        };

        num_layer {
            bindings = <
&none  &none  &none  &none   &none   &none     &kp STAR   &kp N7   &kp N8   &kp N9  &kp PLUS   &none
&none  &none  &none  &none   &none   &none     &kp FSLH   &kp N4   &kp N5   &kp N6  &kp MINUS  &none
&none  &none  &none  &none   &none   &none     &kp PRCNT  &kp N1   &kp N2   &kp N3  &kp N0     &none
                     &trans  &trans  &trans    &none      &kp DOT  &kp DOT
            >;
        };

        control_layer {
            bindings = <
&none  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &none      &none       &mkp LCLK     &mkp RCLK          &none      &none      &none
&none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &none     &none       &kp LEFT      &kp UP             &kp DOWN   &kp RIGHT  &none
&none  &kp LSHIFT      &kp LCTRL       &none         &kp LGUI         &trans    &none       &kp HOME      &kp PG_UP          &kp PG_DN  &kp END    &none
                                       &trans        &trans           &trans    &kp K_MUTE  &kp C_VOL_UP  &kp C_VOLUME_DOWN
            >;
        };

        rust_layer {
            bindings = <
&none  &rrp_doubacktic  &rrp_type      &none            &mdp_ita  &mdp_bold    &r_bracket  &r_parent  &r_curly   &r_cur     &r_generic  &none
&none  &r_duobacktic    &r_tribacktic  &rr_tripbacktic  &none     &none        &r_pipe     &kp UNDER  &r_return  &kp ASTRK  &kp AMPS    &none
&none  &rr_duobacktic   &rr_type       &none            &md_ita   &md_bold     &kp EXCL    &kp EQUAL  &r_match   &none      &r_colon    &none
                                       &none            &none     &none        &none       &none      &trans
            >;
        };
    };
};
